###########################################################
#			Benjamin Lampel, Joel Dick, Wei-Tsung Lin						#
#			293n 2016																						#
#			DDlog file for DeepDive analysis: 									#
#			rules for determining users from non-users					#
###########################################################

###########################################################
#					Relations (Input Data):													#
#					equivalent to db table													#
###########################################################

#University subreddit comments ONLY
@source
uni_sub_comments(
	created_utc				int,
	subreddit					text,
	author						text,
	domain						text,
	url								text,
	num_comments			int,
	score							int,
	ups								int,
	downs							int,
	title							text,
	selftext					text,
	gilded						int,
	over_18						bool,
	thumbnail					text,
	subreddit_id			text,
	is_self						bool
).

###########################################################
#					Random variable to predict:											#
#					whether a reddit post does well on a sub				#
###########################################################

#random variable predicts whether the post is "good"
@extraction
is_good?(
	@key
	title  text,
	@key
	@references(relation="reddit_user", column="reddit_uname", alias="reddit_user")
	author text
).

reddit_user(
	@key
	author text,
).

reddit_user(author) :-
	uni_sub_comments(_, _, author, _, _, _, _, _, _, _, _, _, _, _, _, _).

###########################################################
#					Feature Extraction:															#
#					finding relevant info in comments								#
###########################################################

#convert time created to an hour in the day, 24h format
time_created (
	time int
).

function utc_to_hour over (
	created_utc text
) returns rows like time_created
implementation "udf/utc_to_hour.py" handles tsv lines.

time_created += utc_to_hour(created_utc) :-
	uni_sub_comments(created_utc, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _).

###########################################################
#					Inference Rules:																#
#					weights that help decide if a user is real			#
###########################################################

#Ups bonus:
@weight(ups)
is_good(title, author) :-
	uni_sub_comments(_, _, author, _, _, _, _, ups, _, title, _, _, _, _, _, _).

#Num comments influence:
@weight(num_comments)
is_good(title, author) :-
	uni_sub_comments(_, _, author, _, _, num_comments, _, _, _, title, _, _, _, _, _, _).
